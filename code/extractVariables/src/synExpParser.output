Terminals unused in grammar

    T_MAINMENU
    T_MENU
    T_UNEQUAL


State 16 conflicts: 10 shift/reduce
State 34 conflicts: 5 shift/reduce
State 38 conflicts: 4 shift/reduce


Grammar

    0 $accept: explist T_EOF

    1 explist: explist exp T_EOL
    2        | exp T_EOL
    3        | T_EOF

    4 exp: exp T_AND exp
    5    | exp T_OR exp
    6    | T_NOT exp
    7    | T_XOR T_OPENPAREN seqexp T_CLOSEPAREN

    8 seqexp: exp
    9       | seqexp exp
   10       | %empty

   11 exp: T_IF exp T_THEN exp T_ELSE exp
   12    | T_IF exp T_THEN exp
   13    | T_OPENPAREN exp T_CLOSEPAREN
   14    | exp T_IMPLIES exp
   15    | exp T_EQUAL exp
   16    | T_TRUE
   17    | T_FALSE
   18    | T_MODULE
   19    | T_LITERAL
   20    | T_SYMBOL
   21    | T_EOL


Terminals, with rules where they appear

    T_EOF (0) 0 3
    error (256)
    T_MAINMENU <kconf_id*> (258)
    T_MENU <kconf_id*> (259)
    T_LITERAL <std::string> (260) 19
    T_SYMBOL <std::string> (261) 20
    T_TRUE (262) 16
    T_FALSE (263) 17
    T_MODULE (264) 18
    T_IF (265) 11 12
    T_THEN (266) 11 12
    T_ELSE (267) 11
    T_UNEQUAL (268)
    T_CLOSEPAREN (269) 7 13
    T_OPENPAREN (270) 7 13
    T_EOL (271) 1 2 21
    T_XOR (272) 7
    T_IMPLIES (273) 14
    T_OR (274) 5
    T_AND (275) 4
    T_EQUAL (276) 15
    T_NOT (277) 6


Nonterminals, with rules where they appear

    $accept (23)
        on left: 0
    explist (24)
        on left: 1 2 3
        on right: 0 1
    exp <synExp*> (25)
        on left: 4 5 6 7 11 12 13 14 15 16 17 18 19 20 21
        on right: 1 2 4 5 6 8 9 11 12 13 14 15
    seqexp <std::vector<synExp*>> (26)
        on left: 8 9 10
        on right: 7 9


State 0

    0 $accept: . explist T_EOF

    T_EOF        shift, and go to state 1
    T_LITERAL    shift, and go to state 2
    T_SYMBOL     shift, and go to state 3
    T_TRUE       shift, and go to state 4
    T_FALSE      shift, and go to state 5
    T_MODULE     shift, and go to state 6
    T_IF         shift, and go to state 7
    T_OPENPAREN  shift, and go to state 8
    T_EOL        shift, and go to state 9
    T_XOR        shift, and go to state 10
    T_NOT        shift, and go to state 11

    explist  go to state 12
    exp      go to state 13


State 1

    3 explist: T_EOF .

    $default  reduce using rule 3 (explist)


State 2

   19 exp: T_LITERAL .

    $default  reduce using rule 19 (exp)


State 3

   20 exp: T_SYMBOL .

    $default  reduce using rule 20 (exp)


State 4

   16 exp: T_TRUE .

    $default  reduce using rule 16 (exp)


State 5

   17 exp: T_FALSE .

    $default  reduce using rule 17 (exp)


State 6

   18 exp: T_MODULE .

    $default  reduce using rule 18 (exp)


State 7

   11 exp: T_IF . exp T_THEN exp T_ELSE exp
   12    | T_IF . exp T_THEN exp

    T_LITERAL    shift, and go to state 2
    T_SYMBOL     shift, and go to state 3
    T_TRUE       shift, and go to state 4
    T_FALSE      shift, and go to state 5
    T_MODULE     shift, and go to state 6
    T_IF         shift, and go to state 7
    T_OPENPAREN  shift, and go to state 8
    T_EOL        shift, and go to state 9
    T_XOR        shift, and go to state 10
    T_NOT        shift, and go to state 11

    exp  go to state 14


State 8

   13 exp: T_OPENPAREN . exp T_CLOSEPAREN

    T_LITERAL    shift, and go to state 2
    T_SYMBOL     shift, and go to state 3
    T_TRUE       shift, and go to state 4
    T_FALSE      shift, and go to state 5
    T_MODULE     shift, and go to state 6
    T_IF         shift, and go to state 7
    T_OPENPAREN  shift, and go to state 8
    T_EOL        shift, and go to state 9
    T_XOR        shift, and go to state 10
    T_NOT        shift, and go to state 11

    exp  go to state 15


State 9

   21 exp: T_EOL .

    $default  reduce using rule 21 (exp)


State 10

    7 exp: T_XOR . T_OPENPAREN seqexp T_CLOSEPAREN

    T_OPENPAREN  shift, and go to state 16


State 11

    6 exp: T_NOT . exp

    T_LITERAL    shift, and go to state 2
    T_SYMBOL     shift, and go to state 3
    T_TRUE       shift, and go to state 4
    T_FALSE      shift, and go to state 5
    T_MODULE     shift, and go to state 6
    T_IF         shift, and go to state 7
    T_OPENPAREN  shift, and go to state 8
    T_EOL        shift, and go to state 9
    T_XOR        shift, and go to state 10
    T_NOT        shift, and go to state 11

    exp  go to state 17


State 12

    0 $accept: explist . T_EOF
    1 explist: explist . exp T_EOL

    T_EOF        shift, and go to state 18
    T_LITERAL    shift, and go to state 2
    T_SYMBOL     shift, and go to state 3
    T_TRUE       shift, and go to state 4
    T_FALSE      shift, and go to state 5
    T_MODULE     shift, and go to state 6
    T_IF         shift, and go to state 7
    T_OPENPAREN  shift, and go to state 8
    T_EOL        shift, and go to state 9
    T_XOR        shift, and go to state 10
    T_NOT        shift, and go to state 11

    exp  go to state 19


State 13

    2 explist: exp . T_EOL
    4 exp: exp . T_AND exp
    5    | exp . T_OR exp
   14    | exp . T_IMPLIES exp
   15    | exp . T_EQUAL exp

    T_EOL      shift, and go to state 20
    T_IMPLIES  shift, and go to state 21
    T_OR       shift, and go to state 22
    T_AND      shift, and go to state 23
    T_EQUAL    shift, and go to state 24


State 14

    4 exp: exp . T_AND exp
    5    | exp . T_OR exp
   11    | T_IF exp . T_THEN exp T_ELSE exp
   12    | T_IF exp . T_THEN exp
   14    | exp . T_IMPLIES exp
   15    | exp . T_EQUAL exp

    T_THEN     shift, and go to state 25
    T_IMPLIES  shift, and go to state 21
    T_OR       shift, and go to state 22
    T_AND      shift, and go to state 23
    T_EQUAL    shift, and go to state 24


State 15

    4 exp: exp . T_AND exp
    5    | exp . T_OR exp
   13    | T_OPENPAREN exp . T_CLOSEPAREN
   14    | exp . T_IMPLIES exp
   15    | exp . T_EQUAL exp

    T_CLOSEPAREN  shift, and go to state 26
    T_IMPLIES     shift, and go to state 21
    T_OR          shift, and go to state 22
    T_AND         shift, and go to state 23
    T_EQUAL       shift, and go to state 24


State 16

    7 exp: T_XOR T_OPENPAREN . seqexp T_CLOSEPAREN

    T_LITERAL    shift, and go to state 2
    T_SYMBOL     shift, and go to state 3
    T_TRUE       shift, and go to state 4
    T_FALSE      shift, and go to state 5
    T_MODULE     shift, and go to state 6
    T_IF         shift, and go to state 7
    T_OPENPAREN  shift, and go to state 8
    T_EOL        shift, and go to state 9
    T_XOR        shift, and go to state 10
    T_NOT        shift, and go to state 11

    T_LITERAL    [reduce using rule 10 (seqexp)]
    T_SYMBOL     [reduce using rule 10 (seqexp)]
    T_TRUE       [reduce using rule 10 (seqexp)]
    T_FALSE      [reduce using rule 10 (seqexp)]
    T_MODULE     [reduce using rule 10 (seqexp)]
    T_IF         [reduce using rule 10 (seqexp)]
    T_OPENPAREN  [reduce using rule 10 (seqexp)]
    T_EOL        [reduce using rule 10 (seqexp)]
    T_XOR        [reduce using rule 10 (seqexp)]
    T_NOT        [reduce using rule 10 (seqexp)]
    $default     reduce using rule 10 (seqexp)

    exp     go to state 27
    seqexp  go to state 28


State 17

    4 exp: exp . T_AND exp
    5    | exp . T_OR exp
    6    | T_NOT exp .
   14    | exp . T_IMPLIES exp
   15    | exp . T_EQUAL exp

    $default  reduce using rule 6 (exp)


State 18

    0 $accept: explist T_EOF .

    $default  accept


State 19

    1 explist: explist exp . T_EOL
    4 exp: exp . T_AND exp
    5    | exp . T_OR exp
   14    | exp . T_IMPLIES exp
   15    | exp . T_EQUAL exp

    T_EOL      shift, and go to state 29
    T_IMPLIES  shift, and go to state 21
    T_OR       shift, and go to state 22
    T_AND      shift, and go to state 23
    T_EQUAL    shift, and go to state 24


State 20

    2 explist: exp T_EOL .

    $default  reduce using rule 2 (explist)


State 21

   14 exp: exp T_IMPLIES . exp

    T_LITERAL    shift, and go to state 2
    T_SYMBOL     shift, and go to state 3
    T_TRUE       shift, and go to state 4
    T_FALSE      shift, and go to state 5
    T_MODULE     shift, and go to state 6
    T_IF         shift, and go to state 7
    T_OPENPAREN  shift, and go to state 8
    T_EOL        shift, and go to state 9
    T_XOR        shift, and go to state 10
    T_NOT        shift, and go to state 11

    exp  go to state 30


State 22

    5 exp: exp T_OR . exp

    T_LITERAL    shift, and go to state 2
    T_SYMBOL     shift, and go to state 3
    T_TRUE       shift, and go to state 4
    T_FALSE      shift, and go to state 5
    T_MODULE     shift, and go to state 6
    T_IF         shift, and go to state 7
    T_OPENPAREN  shift, and go to state 8
    T_EOL        shift, and go to state 9
    T_XOR        shift, and go to state 10
    T_NOT        shift, and go to state 11

    exp  go to state 31


State 23

    4 exp: exp T_AND . exp

    T_LITERAL    shift, and go to state 2
    T_SYMBOL     shift, and go to state 3
    T_TRUE       shift, and go to state 4
    T_FALSE      shift, and go to state 5
    T_MODULE     shift, and go to state 6
    T_IF         shift, and go to state 7
    T_OPENPAREN  shift, and go to state 8
    T_EOL        shift, and go to state 9
    T_XOR        shift, and go to state 10
    T_NOT        shift, and go to state 11

    exp  go to state 32


State 24

   15 exp: exp T_EQUAL . exp

    T_LITERAL    shift, and go to state 2
    T_SYMBOL     shift, and go to state 3
    T_TRUE       shift, and go to state 4
    T_FALSE      shift, and go to state 5
    T_MODULE     shift, and go to state 6
    T_IF         shift, and go to state 7
    T_OPENPAREN  shift, and go to state 8
    T_EOL        shift, and go to state 9
    T_XOR        shift, and go to state 10
    T_NOT        shift, and go to state 11

    exp  go to state 33


State 25

   11 exp: T_IF exp T_THEN . exp T_ELSE exp
   12    | T_IF exp T_THEN . exp

    T_LITERAL    shift, and go to state 2
    T_SYMBOL     shift, and go to state 3
    T_TRUE       shift, and go to state 4
    T_FALSE      shift, and go to state 5
    T_MODULE     shift, and go to state 6
    T_IF         shift, and go to state 7
    T_OPENPAREN  shift, and go to state 8
    T_EOL        shift, and go to state 9
    T_XOR        shift, and go to state 10
    T_NOT        shift, and go to state 11

    exp  go to state 34


State 26

   13 exp: T_OPENPAREN exp T_CLOSEPAREN .

    $default  reduce using rule 13 (exp)


State 27

    4 exp: exp . T_AND exp
    5    | exp . T_OR exp
    8 seqexp: exp .
   14 exp: exp . T_IMPLIES exp
   15    | exp . T_EQUAL exp

    T_IMPLIES  shift, and go to state 21
    T_OR       shift, and go to state 22
    T_AND      shift, and go to state 23
    T_EQUAL    shift, and go to state 24

    $default  reduce using rule 8 (seqexp)


State 28

    7 exp: T_XOR T_OPENPAREN seqexp . T_CLOSEPAREN
    9 seqexp: seqexp . exp

    T_LITERAL     shift, and go to state 2
    T_SYMBOL      shift, and go to state 3
    T_TRUE        shift, and go to state 4
    T_FALSE       shift, and go to state 5
    T_MODULE      shift, and go to state 6
    T_IF          shift, and go to state 7
    T_CLOSEPAREN  shift, and go to state 35
    T_OPENPAREN   shift, and go to state 8
    T_EOL         shift, and go to state 9
    T_XOR         shift, and go to state 10
    T_NOT         shift, and go to state 11

    exp  go to state 36


State 29

    1 explist: explist exp T_EOL .

    $default  reduce using rule 1 (explist)


State 30

    4 exp: exp . T_AND exp
    5    | exp . T_OR exp
   14    | exp . T_IMPLIES exp
   14    | exp T_IMPLIES exp .
   15    | exp . T_EQUAL exp

    T_IMPLIES  shift, and go to state 21
    T_OR       shift, and go to state 22
    T_AND      shift, and go to state 23
    T_EQUAL    shift, and go to state 24

    $default  reduce using rule 14 (exp)


State 31

    4 exp: exp . T_AND exp
    5    | exp . T_OR exp
    5    | exp T_OR exp .
   14    | exp . T_IMPLIES exp
   15    | exp . T_EQUAL exp

    T_AND    shift, and go to state 23
    T_EQUAL  shift, and go to state 24

    $default  reduce using rule 5 (exp)


State 32

    4 exp: exp . T_AND exp
    4    | exp T_AND exp .
    5    | exp . T_OR exp
   14    | exp . T_IMPLIES exp
   15    | exp . T_EQUAL exp

    T_EQUAL  shift, and go to state 24

    $default  reduce using rule 4 (exp)


State 33

    4 exp: exp . T_AND exp
    5    | exp . T_OR exp
   14    | exp . T_IMPLIES exp
   15    | exp . T_EQUAL exp
   15    | exp T_EQUAL exp .

    $default  reduce using rule 15 (exp)


State 34

    4 exp: exp . T_AND exp
    5    | exp . T_OR exp
   11    | T_IF exp T_THEN exp . T_ELSE exp
   12    | T_IF exp T_THEN exp .
   14    | exp . T_IMPLIES exp
   15    | exp . T_EQUAL exp

    T_ELSE     shift, and go to state 37
    T_IMPLIES  shift, and go to state 21
    T_OR       shift, and go to state 22
    T_AND      shift, and go to state 23
    T_EQUAL    shift, and go to state 24

    T_ELSE     [reduce using rule 12 (exp)]
    T_IMPLIES  [reduce using rule 12 (exp)]
    T_OR       [reduce using rule 12 (exp)]
    T_AND      [reduce using rule 12 (exp)]
    T_EQUAL    [reduce using rule 12 (exp)]
    $default   reduce using rule 12 (exp)


State 35

    7 exp: T_XOR T_OPENPAREN seqexp T_CLOSEPAREN .

    $default  reduce using rule 7 (exp)


State 36

    4 exp: exp . T_AND exp
    5    | exp . T_OR exp
    9 seqexp: seqexp exp .
   14 exp: exp . T_IMPLIES exp
   15    | exp . T_EQUAL exp

    T_IMPLIES  shift, and go to state 21
    T_OR       shift, and go to state 22
    T_AND      shift, and go to state 23
    T_EQUAL    shift, and go to state 24

    $default  reduce using rule 9 (seqexp)


State 37

   11 exp: T_IF exp T_THEN exp T_ELSE . exp

    T_LITERAL    shift, and go to state 2
    T_SYMBOL     shift, and go to state 3
    T_TRUE       shift, and go to state 4
    T_FALSE      shift, and go to state 5
    T_MODULE     shift, and go to state 6
    T_IF         shift, and go to state 7
    T_OPENPAREN  shift, and go to state 8
    T_EOL        shift, and go to state 9
    T_XOR        shift, and go to state 10
    T_NOT        shift, and go to state 11

    exp  go to state 38


State 38

    4 exp: exp . T_AND exp
    5    | exp . T_OR exp
   11    | T_IF exp T_THEN exp T_ELSE exp .
   14    | exp . T_IMPLIES exp
   15    | exp . T_EQUAL exp

    T_IMPLIES  shift, and go to state 21
    T_OR       shift, and go to state 22
    T_AND      shift, and go to state 23
    T_EQUAL    shift, and go to state 24

    T_IMPLIES  [reduce using rule 11 (exp)]
    T_OR       [reduce using rule 11 (exp)]
    T_AND      [reduce using rule 11 (exp)]
    T_EQUAL    [reduce using rule 11 (exp)]
    $default   reduce using rule 11 (exp)
